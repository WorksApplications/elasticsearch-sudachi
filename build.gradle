plugins {
    id 'java-library'
    id 'org.jetbrains.kotlin.jvm' version '1.7.0'
    id 'com.diffplug.spotless' version '6.6.1'
    id 'org.sonarqube' version '3.3'
    id("org.jetbrains.kotlinx.kover") version "0.5.1"
    id 'com.worksap.nlp.sudachi.es'
}

group = 'com.worksap.nlp'
archivesBaseName = 'analysis-sudachi'
version = '3.0.0-SNAPSHOT'

tasks.withType(JavaCompile) {
    options.release = 11
    options.encoding = 'UTF-8'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    if (project.version.endsWith("-SNAPSHOT")) {
        maven {
            url = uri("https://oss.sonatype.org/content/repositories/snapshots/")
        }
    }
}

dependencies {
    implementation 'com.worksap.nlp:sudachi:0.7.0'
    compileClasspath "org.elasticsearch:elasticsearch:${elasticsearchVersion}"
    testImplementation "org.elasticsearch:elasticsearch:${elasticsearchVersion}"
    testImplementation "org.elasticsearch.test:framework:${elasticsearchVersion}"
    testImplementation 'org.apache.logging.log4j:log4j-core:2.17.2'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
}

def embedVersion = tasks.register('embedVersion', Copy) {
    from 'src/main/extras/plugin-descriptor.properties'
    into 'build/descriptor'
    expand([version: version, elasticsearchVersion: elasticsearchVersion])
}

def copyDependencies = tasks.register('copyDependencies', Copy) {
    from configurations.runtimeClasspath
    into 'build/libs'
}

def distZip = tasks.register('distZip', Zip) {
    dependsOn tasks.jar, embedVersion, copyDependencies
    archiveBaseName = archivesBaseName
    archiveAppendix = elasticsearchVersion
    from 'build/libs/', 'build/descriptor', 'LICENSE', 'README.md'
}

artifacts {
    archives distZip
}

// See https://github.com/diffplug/spotless/tree/main/plugin-gradle
spotless {
    // watch for https://github.com/diffplug/spotless/issues/911 to be closed
    ratchetFrom 'origin/develop'
    encoding 'UTF-8' // all formats will be interpreted as UTF-8

    format 'misc', {
        target '*.gradle', '*.md', '.gitignore', '*.txt', '*.csv'

        trimTrailingWhitespace()
        indentWithSpaces(2)
        endWithNewline()
    }
    java {
        // don't need to set target, it is inferred from java
        // version list: https://github.com/diffplug/spotless/tree/main/lib-extra/src/main/resources/com/diffplug/spotless/extra/eclipse_jdt_formatter
        eclipse('4.21.0').configFile('.formatter/eclipse-formatter.xml')
        licenseHeaderFile('.formatter/license-header')
    }
    kotlin {
        // by default the target is every '.kt' and '.kts` file in the java sourcesets
        ktfmt('0.39')
        licenseHeaderFile('.formatter/license-header')
    }
}

sonarqube {
  properties {
    property "sonar.projectKey", "WorksApplications_elasticsearch-sudachi"
    property "sonar.organization", "worksapplications"
    property "sonar.host.url", "https://sonarcloud.io"
  }
}

tasks.koverXmlReport {
    enabled = true
    xmlReportFile.set(layout.buildDirectory.file("reports/jacoco/test/jacocoTestReport.xml"))
}

task printVersionForGithubActions {
    doLast {
        // https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#environment-files
        file(System.getenv("GITHUB_ENV")).write("PROJ_VERSION=$project.version")
    }
}
